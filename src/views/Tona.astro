---
import Link from "../components/Link.astro";

const links = [
  {
    name: "Github",
    url: "https://github.com/tonadevsantos",
  },
  {
    name: "LinkedIn",
    url: "https://www.linkedin.com/in/tonadev",
  },
  {
    name: "Dev.to",
    url: "https://dev.to/tonadev",
  },
  {
    name: "Twitter",
    url: "https://x.com/tonadev",
  },
];
---

<div class="im-tona">
  <h1 class="im-tona-header">
    <span class="im-tona-header__name"> I'm Tona Gonz√°lez</span>
    <span class="im-tona-header__subtitle" aria-label="a Frontend Developer">
      <span aria-hidden="true" class="im-tona-header__animatable">a</span>
      <span aria-hidden="true" class="im-tona-header__block">
        {
          "Frontend"
            .split("")
            .map((letter) => (
              <span class="im-tona-header__animatable">{letter}</span>
            ))
        }
      </span>
      <span aria-hidden="true" class="im-tona-header__block">
        {
          "Developer"
            .split("")
            .map((letter) => (
              <span class="im-tona-header__animatable">{letter}</span>
            ))
        }
      </span>
    </span>
  </h1>
  <div class="im-tona-linkbar">
    {
      links.map((link) => (
        <Link href={link.url} class="im-tona-link">
          {link.name}
        </Link>
      ))
    }
  </div>
  <script>
    import anime from "animejs";

    const DURATION = 1000;
    const letters = document.getElementsByClassName(
      "im-tona-header__animatable"
    );

    const letterMovementAnimation = anime
      .timeline({ loop: true, duration: DURATION, autoplay: false })
      .add({
        targets: letters,
        translateY: [0, -8, 0],
        opacity: [0.6, 0.9, 1],
        easing: "easeInOutSine",
        delay: (_, i) => 50 * i,
      })
      .add({
        duration: DURATION * 2,
      });

    const mediaQuery = window.matchMedia("(prefers-reduced-motion: reduce)");

    function handleAnimation(query: { matches: boolean }) {
      if (query.matches) {
        letterMovementAnimation.pause();
      } else {
        letterMovementAnimation.play();
      }
    }

    mediaQuery.addEventListener("change", () => {
      handleAnimation(mediaQuery);
    });

    handleAnimation(mediaQuery);
  </script>

  <style lang="scss">
    @import "../styles/theme.scss";

    .im-tona {
      display: flex;
      justify-content: center;
      flex-direction: column;
      text-align: center;
      height: 100%;
    }

    .im-tona-header {
      display: flex;
      flex-direction: column;
      font-size: 4rem;
      margin: 0 0 2rem 0;

      &__subtitle {
        --animation-repetition: 1;
        font-size: 0.6em;
        @include glowing-text($color-accent-value);

        &:hover {
          --animation-repetition: 2;
          --anim-play-state: running;
          animation-duration: 0.75s;
        }
      }
    }

    .im-tona-linkbar {
      display: flex;
      justify-content: space-around;
    }

    .im-tona-link {
      font-size: 1.75rem;
    }

    .im-tona-header__block {
      display: inline-block;
    }

    .im-tona-header__animatable {
      display: inline-block;
    }
  </style>
</div>
